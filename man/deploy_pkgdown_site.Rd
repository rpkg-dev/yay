% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yay.gen.R
\name{deploy_pkgdown_site}
\alias{deploy_pkgdown_site}
\title{Deploy pkgdown site to local Git folder}
\usage{
deploy_pkgdown_site(
  pkg_path = ".",
  to_path = NULL,
  use_dev_build = NULL,
  clean_to_path = TRUE,
  never_clean = paths_to_keep,
  branch = NULL,
  commit_msg = paste0("auto-deploy pkgdown site for ", desc::desc_get_field(file =
    pkg_path, key = "Package")),
  quiet = FALSE
)
}
\arguments{
\item{pkg_path}{Path to the \R package of which the pkgdown website files are to be deployed.}

\item{to_path}{Path to the Git (sub)folder to which the pkgdown website files are to be deployed. If \code{NULL}, the \R options \code{yay.local_pkgdown_deploy_paths}
and \code{yay.default_local_pkgdown_deploy_parent_path} will be respected. See section \emph{Setting \code{to_path} via R options} for details.}

\item{use_dev_build}{Whether or not to deploy the development build of the pkgdown website files. If \code{NULL}, the
\href{https://pkgdown.r-lib.org/reference/build_site.html#development-mode}{\code{development.mode}} set in the pkgdown YAML configuration file from \code{pkg_path} will
be respected.}

\item{clean_to_path}{Whether or not to wipe \code{to_path} before deploying the new website files. Setting this to \code{TRUE} ensures there are no obsolete files left
over from previous deployments.}

\item{never_clean}{A character vector of paths relative to \code{to_path} which are preserved when wiping \code{to_path} (i.e. \code{clean_to_path = TRUE}). By default,
this includes the following files and directories:
\itemize{
\item \code{"netlify.toml"}
\item \code{"robots.txt"}
\item \code{"_headers"}
\item \code{"_redirects"}
\item \code{".gitignore"}
\item \code{".gitmodules"}
\item \code{".gitsigners"}
\item \code{".htaccess"}
\item \code{".hvm"}
\item \code{".well-known"}
}}

\item{branch}{The name of the Git branch to which the static website files are to be committed. A character scalar or \code{NULL}. If \code{NULL}, defaults to the
currently checked out branch of the repository \code{to_path} belongs to.}

\item{commit_msg}{The Git commit message used for the deployment. A character scalar.}

\item{quiet}{Whether or not to suppress printing status output from internal processing.}
}
\value{
A vector of paths to the deployed files/folders, invisibly.
}
\description{
Copies the static \link[pkgdown:pkgdown-package]{pkgdown} website files to another local Git folder, then stages, commits and pushes the changes. Use
\code{\link[pkgdown:build_site]{pkgdown::build_site()}} before running this function in order to create the website files.

Use this function with \strong{caution} since by default it – except for the paths listed in \code{never_clean} – \strong{completely wipes the \code{to_path}
directory}!
}
\details{
This function is registered as an \href{https://rstudio.github.io/rstudioaddins/}{RStudio add-in}, allowing RStudio users to assign a \href{https://support.posit.co/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts-in-the-RStudio-IDE}{custom shortcut} to it and to invoke it from the \href{https://posit.co/blog/rstudio-1-4-a-quick-tour/#command-palette-shortcuts}{command palette}.
}
\section{Setting \code{to_path} via \R options}{
Instead of directly providing a valid \code{to_path} argument, you can also set \code{to_path = NULL} and provide
\itemize{
\item the desired deploy paths for each package in the \R option \code{yay.local_pkgdown_deploy_paths}. The value of this option must be a named character vector
whereas the names correspond to the package names and the values to the filesystem paths. As an example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{options(yay.local_pkgdown_deploy_paths = c(some_pkg    = "/path/to/common_pkgdown_repo/some_pkg",
                                           another_pkg = "/path/to/common_pkgdown_repo/another_pkg",
                                           foo_pkg     = "/path/to/dedicated_foo_pkgdown_repo"))
}\if{html}{\out{</div>}}
\item a default parent path in the \R option \code{yay.default_local_pkgdown_deploy_parent_path} that will be used as the deployment parent directory for all packages
that are not explicitly listed in \code{yay.local_pkgdown_deploy_paths}. For example you could set

\if{html}{\out{<div class="sourceCode r">}}\preformatted{options(yay.default_local_pkgdown_deploy_parent_path = "/path/to/common_pkgdown_repo")
}\if{html}{\out{</div>}}

which would result in deploying the pkgdown website files of a hypothetical package named \emph{bar_pkg} to \verb{/path/to/common_pkgdown_repo/bar_pkg}.
}

A suitable place to define the above options is the \href{https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R-with-Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf-and-repos-conf}{\code{.Rprofile} file}
in the user's home directory.
}

\seealso{
Other Git repository functions:
\code{\link{deploy_static_site}()}
}
\concept{gitrepo}
