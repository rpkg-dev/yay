% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yay.gen.R
\name{gh_text_file}
\alias{gh_text_file}
\title{Read in text file from GitHub repository}
\usage{
gh_text_file(owner, name, path, rev = "HEAD")
}
\arguments{
\item{owner}{Repository owner's GitHub user or organization name. A character scalar.}

\item{name}{Repository name. A character scalar.}

\item{path}{Path to a file, relative to the repository root. A character scalar.}

\item{rev}{\href{https://git-scm.com/docs/revisions#_specifying_revisions}{Git revision expression} matching the desired Git tree object, e.g. a branch or tag
name or another symbolic reference like \code{"HEAD@{yesterday}"} or \code{"HEAD~10"}. A character scalar.}
}
\value{
A character scalar, or an empty character vector in case no text file is found under
\href{https://git-scm.com/docs/revisions#Documentation/revisions.txt-emltrevgtltpathgtemegemHEADREADMEememmasterREADMEem}{\code{rev:path}}.
}
\description{
Downloads the text file under the specified path from a GitHub repository via \href{https://docs.github.com/en/graphql/overview/about-the-graphql-api}{GitHub's GraphQL API} and returns its content as a string.
}
\details{
Works for both public and private repositories, for the latter you just need to set up a sufficiently authorized \link[gh:gh_token]{GitHub Personal Access Token (PAT)}.

Note that nothing is returned in case of a \href{https://en.wikipedia.org/wiki/Binary_file}{\emph{binary} file}, as if no file at all existed under the given
\code{path}.
}
\examples{
yay::gh_text_file(owner = "rpkg-dev",
                  name = "pal",
                  path = "pal.Rproj",
                  rev = "HEAD~2") |>
  cat()
}
\seealso{
Other GitHub functions:
\code{\link{gh_dir_ls}()},
\code{\link{gh_release_latest}()},
\code{\link{gh_releases}()},
\code{\link{gh_text_files}()}
}
\concept{gh}
