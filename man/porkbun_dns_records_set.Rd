% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yay.gen.R
\name{porkbun_dns_records_set}
\alias{porkbun_dns_records_set}
\title{Set Porkbun DNS records}
\usage{
porkbun_dns_records_set(
  records,
  domain,
  api_key = pal::pkg_config_val("porkbun_api_key"),
  secret_api_key = pal::pkg_config_val("porkbun_secret_api_key"),
  max_tries = 3L
)
}
\arguments{
\item{records}{DNS records. A dataframe/tibble with the columns
\code{"type"}, \code{"hostname"}, \code{"value"}, \code{"ttl"}, \code{"priority"}, \code{"weight"}, \code{"port"}, \code{"flag"} and \code{"tag"}. The first three columns are
mandatory, columns not listed here are silently ignored.}

\item{domain}{Domain name to set DNS records for. A character scalar.}

\item{api_key}{Porkbun.com API key. A character scalar.}

\item{secret_api_key}{Porkbun.com secret API key. A character scalar.}

\item{max_tries}{Maximum number of attempts to retry in case of an HTTP error. An integerish scalar.}
}
\value{
A character vector of created record identifiers, invisibly.
}
\description{
Retrieves DNS records from Porkbun for the specified \code{domain} using the
\href{https://porkbun.com/api/json/v3/documentation#DNS\%20Create\%20Record}{\verb{/api/json/v3/dns/create/\{domain\}}} endpoint of Porkbun's API. DNS \code{records} must be
provided as a dataframe/tibble with the columns
\code{"type"}, \code{"hostname"}, \code{"value"}, \code{"ttl"}, \code{"priority"}, \code{"weight"}, \code{"port"}, \code{"flag"}, \code{"tag"} and \code{"target"}. Further columns are
silently ignored.
}
\details{
Supported are the DNS record types \code{A}, \code{AAAA}, \code{ALIAS}, \code{CAA}, \code{CNAME}, \code{HTTPS}, \code{MX}, \code{NS}, \code{SRV}, \code{SVCB}, \code{TLSA} and \code{TXT}.
}
\examples{
\dontrun{
tibble::tribble(
  ~type,   ~hostname,          ~value,           ~ttl, ~priority, ~weight, ~port, ~flag, ~tag,
  "CAA",   "my.site",          "letsencrypt.org", 3600L, NA,      NA,      NA,    0L,    "issue",
  "CNAME", "autoconfig",       "mailbox.org",     3600L, NA,      NA,      NA,    NA,    NA,
  "MX",    "my.site",          "mxext1.mailbox.org", 3600L, NA,   NA,      NA,    NA,    NA,
  "SRV",   "_hkps._tcp.my.site", "pgp.mailbox.org",    3600L, 1L,   1L,      443L,  NA,    NA,
  "TXT",   "_mta-sts",           "v=STSv1; id=001",    3600L, NA,   NA,      NA,    NA,    NA) |>
  yay::porkbun_dns_records_set(domain = "my.site")
                               
# to use a TOML file that defines a `records` table as input:
pal::toml_read("dns_records.toml")$records |>
  purrr::map_dfr(tibble::as_tibble_row) |>
  yay::porkbun_dns_records_set(domain = "my.site")}
}
\seealso{
Other Porkbun functions:
\code{\link{porkbun_dns_records_delete}()},
\code{\link{porkbun_dns_records_get}()}
}
\concept{porkbun}
